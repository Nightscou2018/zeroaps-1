[device "curl"]
fields = 
cmd = bash
vendor = openaps.vendors.process
args = -c "curl -s https://colinsbg.azurewebsites.net/api/v1/entries.json | json -e 'this.glucose = this.sgv'"

[report "settings/carb-ratios.json"]
device = my722
use = read_carb_ratios
reporter = JSON

[device "meal"]
fields = pumphistory profile clock
cmd = oref0
args = meal
vendor = openaps.vendors.process

[report "monitor/meal.json"]
profile = settings/profile.json
use = shell
reporter = text
clock = monitor/clock-zoned.json
json_default = True
pumphistory = monitor/pumphistory-zoned.json
device = meal
remainder = []

[device "auto-sens"]
vendor = openaps.vendors.process
extra = auto-sens.ini

[report "monitor/auto-sens.json"]
profile = settings/profile.json
use = shell
reporter = text
json_default = True
pumphistory = monitor/pumphistory-zoned.json
basal_profile = monitor/active_basal_profile.json
insulin_sensitivities = settings/insulin_sensitivities.json
glucose = monitor/glucose.json
device = auto-sens
remainder = []

[report "monitor/glucose.json"]
device = curl
use = shell
reporter = text

[report "last_ten_cgm_readings.json"]
device = curl
remainder = []
use = shell
json_default = True
reporter = JSON

[report "last_four_pump_hours.json"]
device = my722
hours = 4.0
use = iter_pump_hours
reporter = JSON

[alias]
last_four_hours = report invoke last_four_pump_hours.json last_ten_cgm_readings.json
gather-profile = ! bash -c "openaps report invoke settings/settings.json settings/bg_targets_mmol.json settings/insulin_sensitivities_mmol.json settings/basal_profile.json settings/carb-ratios.json settings/profile.json && openaps use units bg_targets settings/bg_targets_mmol.json > settings/bg_targets.json && openaps use units insulin_sensitivities settings/insulin_sensitivities_mmol.json > settings/insulin_sensitivities.json"
monitor-pump = report invoke monitor/clock.json monitor/clock-zoned.json monitor/battery.json monitor/reservoir.json monitor/status.json monitor/temp_basal.json monitor/pumphistory.json monitor/pumphistory-zoned.json monitor/iob.json monitor/meal.json monitor/active_basal_profile.json
monitor-cgm = report invoke monitor/glucose.json
preflight = ! bash -c "rm -f monitor/clock.json 2>/dev/null && openaps use my722 mmtune && openaps report invoke monitor/clock.json && grep -q T monitor/clock.json && echo PREFLIGHT OK && rm -f preflight_fail.log || ( echo PREFLIGHT FAIL; echo -n X >> preflight_fail.log; exit 1 )"
gather = ! bash -c "rm -f monitor/*; openaps monitor-cgm && openaps monitor-pump"
loop = ! bash -c "(echo "" && date && (openaps preflight && openaps gather && openaps enact && cd /home/pi/zeroaps && ./log_complete.sh))"
enact = ! bash -c "rm -f enact/suggested.json; openaps report invoke enact/suggested.json && cat enact/suggested.json && grep -q duration enact/suggested.json && openaps report invoke enact/enacted.json && echo ENACT OK || echo ENACT SKIP "
ns-upload = ! bash -c "openaps report invoke monitor/upload-status.json && ns-upload $NIGHTSCOUT_HOST $API_SECRET devicestatus.json monitor/upload-status.json && openaps upload-recent-treatments"
retry-loop = ! bash -c "until(openaps loop); do sleep 10; done; openaps ns-upload; ./every_tenth_loop.sh"
latest-ns-treatment-time = ! bash -c "nightscout latest-openaps-treatment $NIGHTSCOUT_HOST | json created_at"
format-latest-nightscout-treatments = ! bash -c "nightscout cull-latest-openaps-treatments monitor/pumphistory-zoned.json settings/model.json $(openaps latest-ns-treatment-time) > upload/latest-treatments.json"
upload-recent-treatments = ! bash -c "openaps format-latest-nightscout-treatments && test $(json -f upload/latest-treatments.json -a created_at eventType | wc -l ) -gt 0 && (ns-upload $NIGHTSCOUT_HOST $API_SECRET treatments.json upload/latest-treatments.json ) || echo \"No recent treatments to upload\""

[device "oref0"]
vendor = openaps.vendors.process
extra = oref0.ini

[device "get-profile"]
vendor = openaps.vendors.process
extra = get-profile.ini

[device "calculate-iob"]
vendor = openaps.vendors.process
extra = calculate-iob.ini

[device "determine-basal"]
fields = iob temp_basal glucose profile auto-sens meal
cmd = oref0-determine-basal
vendor = openaps.vendors.process
args = 

[report "settings/settings.json"]
device = my722
use = read_settings
reporter = JSON

[report "settings/bg_targets_mmol.json"]
device = my722
use = read_bg_targets
reporter = JSON

[report "settings/insulin_sensitivities_mmol.json"]
device = my722
use = read_insulin_sensitivities
reporter = JSON

[report "settings/basal_profile.json"]
device = my722
use = read_basal_profile_std
reporter = JSON

[report "settings/profile.json"]
use = shell
bg_targets = settings/bg_targets.json
settings = settings/settings.json
basal_profile = monitor/active_basal_profile.json
reporter = text
json_default = True
max_iob = max_iob.json
device = get-profile
remainder = []
insulin_sensitivities = settings/insulin_sensitivities.json
carb-ratios = settings/carb-ratios.json

[device "units"]
vendor = openaps.vendors.units
extra = units.ini

[report "monitor/pumphistory.json"]
device = my722
hours = 28
use = iter_pump_hours
reporter = JSON

[report "monitor/clock.json"]
device = my722
use = read_clock
reporter = JSON

[report "monitor/iob.json"]
profile = settings/profile.json
use = shell
reporter = JSON
clock = monitor/clock.json
json_default = True
pumphistory = monitor/pumphistory.json
device = calculate-iob
remainder = []

[report "enact/suggested.json"]
profile = settings/profile.json
use = shell
temp_basal = monitor/temp_basal.json
reporter = text
json_default = True
device = determine-basal
remainder = []
iob = monitor/iob.json
glucose = monitor/glucose.json
meal = monitor/meal.json
auto-sens = monitor/auto-sens.json

[report "monitor/temp_basal.json"]
device = my722
use = read_temp_basal
reporter = JSON

[report "enact/enacted.json"]
device = my722
input = enact/suggested.json
use = set_temp_basal
reporter = JSON

[vendor "mmeowlink.vendors.mmeowlink"]
path = .
module = mmeowlink.vendors.mmeowlink

[device "ns-status"]
vendor = openaps.vendors.process
extra = ns-status.ini

[vendor "openapscontrib.timezones"]
path = .
module = openapscontrib.timezones

[device "tz"]
vendor = openapscontrib.timezones
extra = tz.ini

[report "monitor/clock-zoned.json"]
use = clock
reporter = JSON
astimezone = False
date = None
adjust = missing
input = monitor/clock.json
device = tz
timezone = GMT

[report "monitor/upload-status.json"]
suggested = enact/suggested.json
status = monitor/status.json
use = shell
reservoir = monitor/reservoir.json
reporter = JSON
battery = monitor/battery.json
clock = monitor/clock-zoned.json
json_default = True
device = ns-status
remainder = []
iob = monitor/iob.json
enacted = enact/enacted.json

[report "monitor/reservoir.json"]
device = my722
use = reservoir
reporter = JSON

[report "monitor/battery.json"]
device = my722
use = read_battery_status
reporter = JSON

[report "monitor/status.json"]
device = my722
use = status
reporter = JSON

[device "my722"]
vendor = mmeowlink.vendors.mmeowlink
extra = my722.ini

[report "monitor/pumphistory-zoned.json"]
use = rezone
reporter = JSON
astimezone = False
date = timestamp dateString start_at end_at created_at
adjust = missing
input = monitor/pumphistory.json
device = tz
timezone = BST

[report "monitor/active_basal_profile.json"]
device = my722
use = read_selected_basal_profile
reporter = JSON

